# https://taskfile.dev

version: "3"

tasks:
  default:
    cmds:
      - task: up

  up:
    cmds:
      - task: terraform:apply

  terraform:apply:
    run: once
    deps:
      - compose:up
      - terraform:init
    cmds:
      - task: unseal:terraform:apply
      - cmd: terraform apply -auto-approve
    sources:
      - '*.tf'
    generates:
      - terraform.tfstate

  unseal:up:
    run: once
    deps:
      - unseal:compose:up
      - unseal:terraform:apply

  unseal:terraform:init:
    run: once
    dir: ./vault-unseal-tf
    deps:
      - unseal:compose:up
    cmds:
      - cmd: terraform init
    status:
      - 'test -d ./.terraform'

  unseal:terraform:apply:
    run: once
    dir: ./vault-unseal-tf
    deps:
      - unseal:compose:up
      - unseal:terraform:init
    cmds:
      - cmd: terraform apply -auto-approve
    sources:
      - '*.tf'
    generates:
      - terraform.tfstate

  unseal:compose:up:
    run: once
    cmds:
      - cmd: mkdir -p ./vault-alt-data ./vault-alt-config
      - cmd: docker compose up -d vault-unseal
      - cmd: |
          sleep 1 # Give it a moment to start listening on the port
          for i in {1..5}; do
            if curl --connect-timeout 10 --fail --silent "http://127.0.0.1:8300/v1/sys/health?uninitcode=200&sealedcode=200" >/dev/null 2>/dev/null; then
              exit 0
            fi
            sleep 1
          done
          printf 'ERROR: Vault process did not start. Check the container logs\n' >&2
          exit 1
    silent: true
    status:
      - test -n "$(docker compose ps --format json)"
      - 'curl --connect-timeout 10 --fail --silent "http://127.0.0.1:8300/v1/sys/health?uninitcode=200&sealedcode=200"'

  unseal:reset:
    run: once
    deps:
      - unseal:terraform:reset
      - unseal:vault:reset

  unseal:vault:reset:
    run: once
    cmds:
      - cmd: rm -rf ./vault-alt-data
    status:
      - '! test -d ./vault-alt-data'

  unseal:terraform:reset:
    run: once
    dir: ./vault-unseal-tf
    deps:
      - compose:down
    cmds:
      - cmd: rm -rf ./terraform.tfstate ./terraform.tfstate.backup ./.terraform/
      - cmd: rm -f ../vault-config/unseal.hcl
      - cmd: rm -f ../vault-config/server.crt ../vault-config/server.bundle.crt ../vault-config/server.ca.crt ../vault-config/server.pem
    status:
      - '! test -d ./.terraform'
      - '! test -f ./terraform.tfstate'
      - '! test -f ./terraform.tfstate.backup'
      - '! test -f ../vault-config/unseal.hcl'
      - '! test -f ../vault-config/server.crt'
      - '! test -f ../vault-config/server.bundle.crt'
      - '! test -f ../vault-config/server.ca.crt'
      - '! test -f ../vault-config/server.pem'

  down:
    cmds:
      - task: compose:down
      - task: terraform:reset
      - task: vault:reset
      - task: unseal:reset
      - task: tls:reset

  tls:reset:
    run: once
    cmds:
      - cmd: rm -rf tmp/tls/
    status:
      - '! test -f ./tmp/tls/server.certificate.pem'

  compose:down:
    run: once
    cmds:
      - cmd: docker compose down
    status:
      - test -z "$(docker compose ps --format json)"

  compose:up:
    run: once
    deps:
      - unseal:up
    cmds:
      - cmd: mkdir -p ./vault-data ./vault-config ./logs
      - cmd: docker compose up -d
      - cmd: |
          sleep 1 # Give it a moment to start listening on the port
          for i in {1..5}; do
            if curl --connect-timeout 10 --fail --cacert ./vault-config/server.ca.crt --silent "https://127.0.0.1:8200/v1/sys/health?uninitcode=200" >/dev/null 2>/dev/null; then
              exit 0
            fi
            sleep 1
          done
          printf 'ERROR: Vault process did not start. Check the logs\n' >&2
          exit 1
    silent: true
    status:
      - test -n "$(docker compose ps --format json)"
      - 'curl --connect-timeout 10 --fail --cacert ./vault-config/server.ca.crt --silent "https://127.0.0.1:8200/v1/sys/health?uninitcode=200&sealedcode=200"'

  vault:reset:
    deps:
      - terraform:reset
    cmds:
      - cmd: rm -rf ./logs/audit.log ./vault-data
    status:
      - '! test -d ./vault-data'
      - '! test -f ./logs/audit.log'

  terraform:reset:
    cmds:
      - rm -rf ./.terraform
      - rm -f ./terraform.tfstate ./terraform.tfstate.backup ./.env
    status:
      - '! test -d ./.terraform'
      - '! test -f ./terraform.tfstate'
      - '! test -f ./terraform.tfstate.backup'
      - '! test -f ./.env'

  terraform:init:
    deps:
      - compose:up
    cmds:
      - cmd: terraform init
    status:
      - 'test -d ./.terraform'
